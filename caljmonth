#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2019 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC2001

BIN="$(basename "$0")"

function die()
{
  echo >&2 "$1"
  exit 1
}

function usage()
{
cat << EOF

## \`$BIN\` generate month bullet journal output using calmonth

### Usage:

\`\`\`bash

  $BIN

\`\`\`

### Description

Generate file in \`~/.jrnl/YYYY/MM.jrnl\` with calendar month using
default output of \`cal\` command and group by week events from
\`~/.calendar\` using \`calmonth\` command, removing datetime and
leaving only events and tasks.

### Example:

\`\`\`bash

	$BIN

  cat ~/.jrnl/2023/06.jrnl

       June 2023
  Su Mo Tu We Th Fr Sa
               1  2  3
   4  5  6  7  8  9 10
  11 12 13 14 15 16 17
  18 19 20 21 22 23 24
  25 26 27 28 29 30


  WEEK 1 ---------------

  × DevSecOps
  × FLLS semver
  × CLIBRE


  WEEK 4 ---------------

  ∘ CUMPLE OSi
  × RETIRO PELUZA
  × LILIAN SM
  ∘ FERIADO TUR
  × AEP -> USH
  ∘ FERIADO BLG
  × SPIDERMAN
  ‐ HIFU ALE
  → ALE 11F
  ∘ PARO DOCENTE
  × GYM
  · GYM
  · FIBER
  ∘ MAKEUP VPQE

  WEEK 5 ---------------

  · COOP CONSEJO
  · USH -> AEP
  ‐ ALE 11F
  ‐ ALE 11F
  ‐ ALE 11F
  · FLLS TEAM
  ∘ REDHAT EDA
  ∘ REDHAT K8S

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -n "$BASH_DEBUG"  ]] && set -x
[[ -n "$YEAR"        ]] || YEAR="$(date +%Y)"
[[ -z "$2"           ]] || YEAR="$2"
[[ -n "$MONTH"       ]] || MONTH="$(date +%m)"
[[ -z "$1"           ]] || MONTH="$(echo "$1" | sed 's/^0//g')"
[[ -n "$DAY"         ]] || DAY='01'
[[ -n "$CALENDAR"    ]] || CALENDAR="$HOME/.calendar"
[[ -e '.calendar'    ]] && CALENDAR="$PWD/.calendar"
[[ -e "$CALENDAR"    ]] || die "NOT FOUND .calendar"
[[ -n "$M"           ]] || M="$(echo "$MONTH" | sed 's/^0//g')"
[[ -n "$MM"          ]] || MM="$(printf "%02d" "$M")"
[[ -n "$DIR"         ]] || DIR="$HOME/.jrnl"
[[ -d "$DIR"         ]] || mkdir -p "$DIR/$YEAR"
[[ -n "$JRNL"        ]] || JRNL="$DIR/$YEAR/$MM.jrnl"
[[ -n "$MAX"         ]] || MAX='22'
[[ -n "$CAL_EXCLUDE" ]] || CAL_EXCLUDE='(EXCLUDE_REGEX)'

printf "\\n" > "$JRNL"
LC_ALL='en_US.UTF-8' cal "$MONTH" "$YEAR" >> "$JRNL" 2>/dev/null

WEEK=''
NUMBER=1
MAX=22
WITDH="$((MAX-7))"
YEAR="$YEAR" MONTH="$MONTH" DAY="$DAY" calmonth \
  | grep -vE 'TODAY'               \
  | while read -r DATE EXTRA
    do

      WEEK="$(date +%U -d "$DATE")"

      if [[ "$WEEK" != "$LAST_WEEK" ]]
      then
        LINE="$(printf "%*s" "$WITDH" ' ' | tr ' ' '-')"
        printf "\\nWEEK %s %s\\n\\n" "$NUMBER" "$LINE"
        NUMBER="$((NUMBER+1))"
      fi

      printf "%s\\n" "$EXTRA"
      LAST_WEEK="$WEEK"

    done \
  | sed -e 's/[0-9]\+:[0-9]\+ //g' \
  | sed -e 's/[0-9]\+:[0-9]\+-//g' \
  | grep -vE "$CAL_EXCLUDE"        \
  | while read -r LINE
    do
      printf "%-*s\\n" "$MAX" "$LINE"
    done >> "$JRNL"
