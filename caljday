#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2019 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC2001

BIN="$(basename "$0")"

function die()
{
  echo >&2 "$1"
  exit 1
}

function usage()
{
cat << EOF

## \`$BIN\` generate day bullet journal output using calday

### Usage:

\`\`\`bash

  $BIN

\`\`\`

### Description

Generate and return filename \`~/.jrnl/YYYY/YYYY-MM/YYYY-MM-DD.jrnl\`
with calendar day with events from \`~/.calendar\` using \`calday\`
command, removing date and leaving only events and tasks.

### Example:

\`\`\`bash

	DATE=2023-06-29 $BIN

  ~/.jrnl/2023/2023-06/2023-06-29.jrnl

\`\`\`

### Show generated journal file:

\`\`\`

  cat ~/.jrnl/2023/2023-06/2023-06-29.jrnl

	JUE 29/JUN -----------

	08:00 · MN4N OSi
	08:30 · GYM
	16:15 · MN4N OSi
	19:00 ∘ REDHAT K8S
	20:30 ∘ EKO GUIA HACKER

\`\`\`

### Original events in calendar


\`\`\`bash

  grep "Jun 29" ~/.calendar

	Jun 29 08:00 · MN4N OSi
	Jun 29 08:30 · GYM
	Jun 29 16:15 · MN4N OSi
	Jun 29 19:00 ∘ REDHAT K8S
	Jun 29 20:30 ∘ EKO GUIA HACKER

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -n "$BASH_DEBUG"  ]] && set -x
[[ -n "$DATE"        ]] || DATE="$(date +%F)"
[[ -z "$1"           ]] || DATE="$1"
[[ -n "$DAY"         ]] || DAY="$(date   +%d -d "$DATE")"
[[ -n "$YEAR"        ]] || YEAR="$(date  +%Y -d "$DATE")"
[[ -n "$MONTH"       ]] || MONTH="$(date +%m -d "$DATE")"
[[ -n "$CALENDAR"    ]] || CALENDAR="$HOME/.calendar"
[[ -e '.calendar'    ]] && CALENDAR="$PWD/.calendar"
[[ -e "$CALENDAR"    ]] || die "NOT FOUND .calendar"
[[ -n "$DIR"         ]] || DIR="$HOME/.jrnl"
[[ -n "$DIR_JRNL"    ]] || DIR_JRNL="$DIR/$YEAR/$YEAR-$MONTH"
[[ -d "$DIR_JRNL"    ]] || mkdir -p "$DIR_JRNL"
[[ -n "$JRNL"        ]] || JRNL="$DIR_JRNL/$DATE.jrnl"
[[ -n "$MAX"         ]] || MAX='22'
[[ -n "$CAL_EXCLUDE" ]] || CAL_EXCLUDE='(EXCLUDE_REGEX)'

MAX=22
WITDH="$((MAX-11))"
TITLE="$(date +'%a %d/%b' -d "$DATE" | sed s/á/a/g | sed s/é/e/g)"
LINE="$(printf "%*s" "$WITDH" ' ' | tr ' ' '-')"

printf "%s %s\\n\\n" "${TITLE^^}" "$LINE" > "$JRNL"

calday "$MONTH/$DAY"               \
  | grep -vE 'TODAY'               \
  | while read -r DATE EXTRA
    do

      printf "%s\\n" "$EXTRA"

    done \
  | sed -e 's/-[0-9]\+:[0-9]\+//g' \
  | grep -vE "$CAL_EXCLUDE"        \
  | while read -r LINE
    do
      printf "%-*s\\n" "$MAX" "$LINE"
    done >> "$JRNL" && echo "$JRNL"
