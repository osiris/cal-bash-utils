#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2019 Osiris Alejandro Gomez <osiux@osiux.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# shellcheck disable=SC2001
# shellcheck disable=SC2086

BIN="$(basename "$0")"

function die()
{
  echo >&2 "$1"
  exit 1
}

function usage()
{
cat << EOF

## \`$BIN\` generate year bullet journal output using caljmonth

### Usage:

\`\`\`bash

  $BIN [MONTH] [YEAR]

\`\`\`

### Description

Generate calendar files for each month in \`~/.jrnl/YYYY/MM.jrnl\`,
from the current month to the end of the year using caljmonth.

Return filenames of each month and save one file consolidate output in
\`~/.jrnl/YYYY/YYYY.jrnl\`

### Example:

\`\`\`bash

	$BIN 10 2023

  ~/.jrnl/2023/10.jrnl ~/.jrnl/2023/11.jrnl ~/.jrnl/2023/12.jrnl

\`\`\`

EOF
exit 0
}

[[ "$1" =~ ^[-]+(h|help) ]] && usage

[[ -n "$BASH_DEBUG" ]] && set -x
[[ -n "$YEAR"       ]] || YEAR="$(date +%Y)"
[[ -z "$2"          ]] || YEAR="$2"
[[ -n "$MONTH"      ]] || MONTH="$(date +%m  | sed 's/^0//g')"
[[ -z "$1"          ]] || MONTH="$(echo "$1" | sed 's/^0//g')"
[[ -n "$CALENDAR"   ]] || CALENDAR="$HOME/.calendar"
[[ -e '.calendar'   ]] && CALENDAR="$PWD/.calendar"
[[ -e "$CALENDAR"   ]] || die "NOT FOUND .calendar"
[[ -n "$DIR"        ]] || DIR="$HOME/.jrnl"
[[ -d "$DIR"        ]] || mkdir -p "$DIR/$YEAR"
[[ -n "$JRNL"       ]] || JRNL="$DIR/$YEAR/$MONTH.jrnl"
[[ -n "$OUTPUT"     ]] || OUTPUT="$DIR/$YEAR/$YEAR.jrnl"
[[ "$MONTH" -gt 12  ]] && MONTH=12

MONTHS="$(( 12 - MONTH ))"
FILES=""

for i in $(seq 0 $MONTHS)
do

  MM="$(printf "%02d" "$((MONTH + i))")"
  JRNL="$DIR/$YEAR/$MM.jrnl"
  caljmonth "$((MONTH + i))" "$YEAR"
  FILES+="$JRNL "

done

# SAVE AL MONTHS IN ONE FILE FOR PRINTING
paste -d '  ' $FILES | bullet2ascii > "$OUTPUT"

echo "$FILES"
